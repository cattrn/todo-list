DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
  id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  email VARCHAR(100) NOT NULL UNIQUE,
  password CHAR(60) NOT NULL,
  is_active BOOLEAN NOT NULL DEFAULT false,
  start_of_day TIME DEFAULT '05:00:00'
)

DROP TABLE IF EXISTS recurring_tasks; 

CREATE TABLE IF NOT EXISTS recurring_tasks (
  id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  user_id INT NOT NULL,
  task VARCHAR(255) NOT NULL,
  frequency INT NOT NULL,
  start_date TIMESTAMPTZ,
  created_at TIMESTAMPTZ,
  updated_at TIMESTAMPTZ DEFAULT now(),

  FOREIGN KEY(user_id)
    REFERENCES users(id)
    ON DELETE CASCADE
)

DROP TABLE IF EXISTS tasks; 

CREATE TABLE IF NOT EXISTS tasks (
  id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  user_id INT NOT NULL,
  task VARCHAR(255) NOT NULL,
  due_date TIMESTAMPTZ,
  complete BOOLEAN NOT NULL DEFAULT false,
  recurring_id INT,
  created_at TIMESTAMPTZ,
  updated_at TIMESTAMPTZ DEFAULT now(),

  CONSTRAINT fk_user
    FOREIGN KEY(user_id)
      REFERENCES users(id)
      ON DELETE CASCADE

  CONSTRAINT fk_recurring
    FOREIGN KEY(recurring_id)
      REFERENCES recurring_tasks(id)
      ON DELETE CASCADE
)

DROP TABLE IF EXISTS email_confirmation;

CREATE TABLE IF NOT EXISTS email_confirmation (
  hash_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  email VARCHAR(50) NOT NULL UNIQUE,
  hash CHAR(60) NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),

  FOREIGN KEY(email) 
    REFERENCES users(email)
    ON DELETE CASCADE
)

DROP TABLE IF EXISTS password_reset;

CREATE TABLE IF NOT EXISTS password_reset (
  hash_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  email VARCHAR(50) NOT NULL UNIQUE,
  hash CHAR(60) NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),

  FOREIGN KEY(email) 
    REFERENCES users(email)
    ON DELETE CASCADE
)